from utility import get_keyboard, SMILE
from bs4 import BeautifulSoup
from glob import glob # –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ä—Ç–∏–Ω–æ–∫
from random import choice # –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
from telegram import ReplyKeyboardMarkup, ReplyKeyboardRemove, ParseMode, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ConversationHandler
import requests
from emoji import emojize
from mongodb import search_or_save_user, mdb, save_user_anketa, save_picture_name, save_file_id, save_like_dislike


# –§—É–Ω–∫—Ü–∏—è sms –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–Ω–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º /start
# –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω–Ω–∞ –ª–æ–≥–∏–∫–∞ –ø—Ä–∏ –µ–µ –≤—ã–∑–æ–≤–µ
def sms(bot, update):
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    print(user)
    smile = emojize(choice(SMILE), use_aliases = True)
    print('–ö—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ –º–Ω–µ –¥–µ–ª–∞—Ç—å???') # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å
    bot.message.reply_text('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {}! \n–ü–æ–≥–æ–≤–æ—Ä–∏—Ç–µ —Å–æ –º–Ω–æ–π {}'.format(bot.message.chat.first_name, smile), reply_markup = get_keyboard())

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
def send_meme(bot, update):
    lists = glob('images/*') # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ä—Ç–∏–Ω–æ–∫
    picture = choice(lists) # –ë–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É
    image = save_picture_name(mdb, picture)
    inl_keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton(f"üëç {image['lake']}", callback_data = 1),
        InlineKeyboardButton(f"üëé {image['dislake']}", callback_data = -1)
    ]])
    msg = update.bot.send_photo(
        chat_id = bot.message.chat.id,
        photo = open(picture, 'rb'),
        reply_markup = inl_keyboard) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    print(msg)
    save_file_id(mdb, picture, msg)
    # update.bot.send_photo(chat_id = bot.message.chat_id, photo = open(picture, 'rb'), reply_markup = inl_keyboard) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É

def inline_button_pressed(bot, update):
    # print(bot.callback_query)
    query = bot.callback_query # –î–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    data = int(query.data) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏ (+1\-1)
    save_like_dislike(mdb, query, data) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    update.bot.edit_message_caption(
        caption = '–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä!',
        chat_id = query.message.chat.id,
        message_id = query.message.message_id)

def get_anecdote(bot, update):
    receive = requests.get('http://anekdotme.ru/random') # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    page = BeautifulSoup(receive.text, 'html.parser') # –ü–æ–¥–∫–ª—é—á–∞–µ–º html –ø–∞—Ä—Å–µ—Ä, –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    find = page.select('.anekdot_text') # –ò–∑ —Å—Ç—Ä–∞–Ω–∏—Ü—ã html –ø–æ–ª—É—á–∞–µ–º class = '.anekdot_text'
    for text in find:
        page = (text.getText().strip()) # –ò–∑ class = '.anekdot_text' –ø–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∏ —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –ø–æ —Å—Ç–æ—Ä–æ–Ω–∞–º
    bot.message.reply_text(page) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –∞–Ω–µ–∫–¥–æ—Ç, –ø–æ—Å–ª–µ–¥–Ω–∏–π

# –§—É–Ω–∫—Ü–∏—è parrot() –æ—Ç–≤–µ—á–∞–µ—Ç —Ç–µ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª
def parrot(bot, update):
    print(bot.message.text) # –ü–µ—á–∞—Ç–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    bot.message.reply_text(bot.message.text) # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–ø–∏—Å–∞–ª

# –§—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
def get_contact(bot, update):
    print(bot.message.contact)
    bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'.format(bot.message.chat.first_name))

# –§—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≥–µ–æ–¥–∞–Ω–Ω—ã–µ
def get_location(bot, update):
    print(bot.message.location)
    bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'.format(bot.message.chat.first_name))

def anketa_start(bot, update):
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    if 'anketa' in user:
        text = '''–í–∞—à –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:
        <b>–ò–º—è:</b> {name}
        <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
        <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
        <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
        –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã!
        –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?
        '''.format(**user['anketa'])
        bot.message.reply_text(text, parse_mode = ParseMode.HTML, reply_markup = ReplyKeyboardRemove())
        return 'user_name'
    else:
        bot.message.reply_text('–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?', reply_markup = ReplyKeyboardRemove())  # –≤–æ–ø—Ä–æ—Å –∏ —É–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        return 'user_name'  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞


def anketa_get_name(bot, update):
    update.user_data['name'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    bot.message.reply_text('–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')  # –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å
    return 'user_age'  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞


def anketa_get_age(bot, update):
    update.user_data['age'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    reply_keyboard = [['1', '2', '3', '4', '5']]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.message.reply_text(
        '–û—Ü–µ–Ω–∏—Ç–µ —Å—Ç–∞—Ç—å—é –æ—Ç 1 –¥–æ 5',
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, resize_keyboard = True, one_time_keyboard = True))  # –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    return 'evaluation'  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞


def anketa_get_evaluation(bot, update):
    update.user_data['evaluation'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    reply_keyboard = [['–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å']]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.message.reply_text('–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤ –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.',
                                reply_markup = ReplyKeyboardMarkup(
                                reply_keyboard, resize_keyboard = True, one_time_keyboard = True))  # –∫–ª–∞–≤–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    return 'comment'  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞


def anketa_comment(bot, update):
    update.user_data['comment'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    user = search_or_save_user(mdb, bot.effective_user, bot.message) # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    anketa = save_user_anketa(mdb, user, update.user_data) # –ü–µ—Ä–µ–¥–∞–µ–º –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∫–µ—Ç—ã
    print(anketa)
    text = '''–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
    <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
    '''.format(**update.user_data)
    bot.message.reply_text(text, parse_mode = ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text('–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!', reply_markup = get_keyboard())  # —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä. –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞


def anketa_exit_comment(bot, update):
    update.user_data['comment'] = None
    user = search_or_save_user(mdb, bot.effective_user, bot.message)
    save_user_anketa(mdb, user, update.user_data)
    text = '''–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–í–æ–∑—Ä–∞—Å—Ç:</b> {age}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}'''.format(**update.user_data)
    bot.message.reply_text(text, parse_mode = ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text('–°–ø–∞—Å–∏–±–æ!', reply_markup = get_keyboard())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞


def dontknow(bot, update):
    bot.message.reply_text('–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é, –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ü–µ–Ω–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!')